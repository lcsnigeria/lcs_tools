name: Auto Versioning

on:
  push:
    branches:
      - main

jobs:
  versioning:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensures all tags are fetched

      - name: Get latest tag
        id: get_tag
        run: |
          git fetch --tags
          LATEST_TAG=$(git tag --sort=-v:refname | head -n 1)
          if [[ -z "$LATEST_TAG" ]]; then
            LATEST_TAG="v0.0.0"
          fi
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV

      - name: Increment patch version
        id: new_version
        run: |
          TAG="${{ env.LATEST_TAG }}"
          MAJOR=$(echo $TAG | cut -d. -f1 | tr -d 'v')
          MINOR=$(echo $TAG | cut -d. -f2)
          PATCH=$(echo $TAG | cut -d. -f3)
          PATCH=$((PATCH + 1))
          NEW_VERSION="v$MAJOR.$MINOR.$PATCH"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "::set-output name=NEW_VERSION::$NEW_VERSION"

      - name: Get latest commit message
        id: commit_message
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV
          echo "::set-output name=COMMIT_MESSAGE::$COMMIT_MESSAGE"

      - name: Create and push new tag
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          
          if git rev-parse "refs/tags/${{ env.NEW_VERSION }}" >/dev/null 2>&1; then
            echo "Tag ${{ env.NEW_VERSION }} already exists. Incrementing again..."
            PATCH=$((PATCH + 1))
            NEW_VERSION="v$MAJOR.$MINOR.$PATCH"
            echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          fi
          
          git tag -a "$NEW_VERSION" -m "${{ env.COMMIT_MESSAGE }}"
          git push origin "$NEW_VERSION"